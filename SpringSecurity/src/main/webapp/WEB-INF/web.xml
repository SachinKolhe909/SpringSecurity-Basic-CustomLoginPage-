<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns="http://java.sun.com/xml/ns/javaee"
		xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
		xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
		http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" 
		id="WebApp_ID" version="2.5">

  <display-name>Archetype Created Web Application</display-name>
  
  
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
</listener>

<context-param>
<param-name>contextConfiguration</param-name>
<param-value>
/WEB-INF/spring-servlet.xml
/WEB-INF/application-security.xml
</param-value>

</context-param>

  <servlet>
  	<servlet-name>spring</servlet-name>
  	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
  </servlet>
  
  <servlet-mapping>
  <servlet-name>spring</servlet-name>
  <url-pattern>/</url-pattern>
  </servlet-mapping>
  
  
  <!-- 
  The first thing you need to do is add the following filter declaration to your web.xml file 
  This provides a hook into the Spring Security web infrastructure 'DelegaingFilterProxy' is a Spring framework class
  which delegates to a filter implementation which is defined as a Spring bean in your application context.
  In this case, the bean is named "springSecurityFilterChain", which is an internal infrastructure bean created by the namespace to handle web security.
  Note that you should not use this bean name yourself.
  Once you've added this to your web.xml, you're ready to start editing your application context file.
  Web security services are configured using <http> element.
  see applicationContext.xml now
  -->
  
  <filter>
  	<filter-name>springSecurityFilterChain</filter-name>
  	<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
  </filter>
  
  <filter-mapping>
  <filter-name>springSecurityFilterChain</filter-name>
  <url-pattern>/*</url-pattern>
  </filter-mapping>
  
  
</web-app>
